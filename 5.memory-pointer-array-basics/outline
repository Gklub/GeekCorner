大纲：
	ESRB Ratings: 17+ Mature
	    Strong Language
		Lame Arguments
	Clanjor Productions 哆啦比猫作品


	内存：（理解一切的基础）
		不管你用不用，一直在那里
		申请就是“画”个区域，并“声称”是你的
		释放就是声称我不用了
		没有任何开销，开销在于“审批”和管理
		使用就是，我走到内存区域里，使用它，用完我就走开
		栈内存和堆内存

		顺便：未定义行为（现场互动？）


	指针：
		什么：地址+类型
		运算：取地址娶类型运算&、走过去运算*、我是指针运算*
		      向右走运算++、向左走运算--、距离运算-、
			  向右飞运算+、向左飞运算-
		用途：引用（参数返回）/数组/无限递归类型的解决方案（链表）
		// 复合运算：(*p).a <=> p->a （需要先理解结构体）
		复合运算：*(a+2) <=> a[2] <=> 2[a]

		// 顺便：const qualifier 不变限定符 -> 发誓不改契


	数组：
		是什么：连续内存，一旦使用，就变指针
		字符串（string）：
		    缩略语，全称为 zero-terminated char string (array)
		    即，“以 0 结尾的 char 数组”
			0：左边是有用的，右边是还没用的

		// 顺便：如何看待 char 类型


	综合：
		scanf/printf 什么时候要指针，什么时候不要？

